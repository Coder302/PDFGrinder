<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bgPages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="bgProcFiles.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <metadata name="Tips.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>267, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>43</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AABAREQBQEREAwAAAABAREQDAAAAAEBERAFAREQDAAAAAENFQgMAAAAAnWglB6dsIkm6dByKuXQcu7t0
        HNq7dBzrunQc67t0G9u5dBy7unQciqxuIEl/XC4IAAAAAEtIQAMAAAAAQEREAUBERAMAAAAAQEREAwAA
        AABAREQBQEREAgAAAABAREQEQEREBAAAAABAREQIAAAAAEJFQgRSSz0Eh18sGJhmJ466dBzsuXQc/7l0
        HP+7dBz/uHMd/7t0HP+5dBz/uXQc/7t0HP+4cx3/u3Qc/7ZyHeyzcR6KkGMpGE9JPggAAAAAQEREBEBE
        RAQAAAAAQERECAAAAABAREQBQEREAgAAAABAREQEQEREBAAAAABDRUIIcVczBJZlJ3q5cxzzu3Qc/7hz
        Hf+7dBz/uXQc/7l0HP+7dBz/uHMd/7t0HP+5dBz/uXQc/7t0HP+4cx3/u3Qc/7l0HP+5cxzzomojd1hN
        OwsAAAAAQERDBEBERAQAAAAAQERECAAAAAAAAAAAQEREBwAAAABAREMES0g/BIFdLRimbCLFu3Qc/7l0
        HP+5dBz/u3Qc/7hzHf+7dBz/uXQc/7l0HP+7dBz/uHMd/7t0HP+5dBz/uXQc/7t0HP+4cx3/u3Qc/7l0
        HP+5dBz/sHAfw2FROB8AAAAAQERDBEBERAQAAAAAQEREAwAAAAAAAAAAQERECAAAAAB1WDImtHIe37t0
        HP+4cx3/u3Qc/7l0HP+5dBz/u3Qc/7hzHf+7dBz/uXQc/7l0HP+7dBz/uHMd/7t0HP+5dBz/uXQc/7t0
        HP+4cx3/u3Qc/7l0HP+5dBz/s3Ee32NROCoAAAAAQERDBEBERAQAAAAAQEREAkBERAQAAAAAbVU0Hrdz
        Hd65dBz/uXQc/7t0HP+4cx3/u3Qc/7l0HP+5dBz/u3Qc/7hzHf+7dBz/uXQc/7l0HP+7dBz/uHMd/7t0
        HP+5dBz/uXQc/7t0HP+4cx3/u3Qc/7l0HP+5dBz/s3Ee32JROB8AAAAAQERDBEBERAMAAAAAQkRDBGVS
        Nwi0cR7DuHMd/7t0HP+5dBz/uXQc/7t0HP+4cx3/u3Qc/7l0HP+5dBz/u3Qc/7hzHf+7dBz/uXQc/7l0
        HP+7dBz/uHMd/7ZyHZu1ch2suXQc/7t0HP+4cx3/u3Qc/7l0HP+5dBz/sHAfw1lOOwsAAAAAQEREAUBE
        RAIAAAAAnGglebl0HP+7dBz/uHMd/7t0HP+5dBz/uXQc/7t0HP+4cx3/u3Qc/7l0HP+5dBz/u3Qc/7hz
        Hf+7dBz/tnId3ppnJqu6dBzyd1kxLZhmJj+5dBz2pGsjnbp0HOu4cx3/u3Qc/7l0HP+5dBz/o2sjd1BK
        PggAAAAAAAAAAG9WNB+7dBzzuXQc/7l0HP+7dBz/uHMd/7t0HP+5dBz/uXQc/7t0HP+4cx3/u3Qc/7l0
        HP+5dBz/u3Qc/7hzHf+ycR6Ac1gyBHBXMw8AAAAAW046CIJeLQtxVzMEpWsjoLt0HP+4cx3/u3Qc/7l0
        HP+5cxzzkWMpGExIPwMAAAAAsHAfi7hzHf+7dBz/uXQc/7l0HP+7dBz/uHMd/7t0HP+5dBz/uXQc/7t0
        HP+4cx3/u3Qc/7l0HP+5dBz/u3Qc/7FwH+Z8Wy8BcFY0HKhtIpenbCKNXU86FX1cLwy5dBz3uXQc/7t0
        HP+4cx3/u3Qc/7l0HP+zcR6KAAAAAIdfLAi4cxzsu3Qc/7hzHf+7dBz/uXQc/7l0HP+7dBz/uHMd/7t0
        HP+5dBz/uXQc/7t0HP+4cx3/u3Qc/7l0HP+obSGak2QoNFhNOwirbiGquXQc/7l0HP+nbCKMXE86CJdm
        Jz61ch2suXQc/7t0HP+4cx3/u3Qc/7ZyHeyDXi0ItHIdSLl0HP+5dBz/u3Qc/7hzHf+7dBz/uXQc/7l0
        HP+7dBz/uHMd/7t0HPy4cxzluXQc/7t0HP+4cx3+uHMd5JRkKI2CXS0lAAAAAKptIbO7dBz/uXQc/6lt
        IZQAAAAAdFgyL7VyHZ+5dBz/uXQc/7t0HP+4cx3/u3Qc/6xuIEm4cxyLu3Qc/7l0HP+5dBz/u3Qc/7hz
        Hf+7dBz/uXQc/7l0HP+6dBzae1swJZhmJhm5cxzzuXQc/7JwHq1lUjcIo2ojWbFwH+NuVTQFmGYmI6pt
        IbGtbyCmdVkxGm5WNBC6dBzzuHMd/7t0HP+5dBz/uXQc/7t0HP+4cx3/unQcirt0G7u4cx3/u3Qc/7l0
        HP+5dBz/u3Qc/7hzHf+7dBz/uXQc/7hzHO6JYCsFUUo+CJhmJkykayJzelswJAAAAACFXy1ZtHEeinZZ
        MgRrVTUFAAAAAFlNOwh6WjABblY0BJpnJqy7dBz/uHMd/7t0HP+5dBz/uXQc/7t0HP+5dBy7u3Qb27t0
        HP+4cx3/u3Qc/7l0HP+5dBz/u3Qc/7hzHf+7dBz/uHMd6XZZMRkAAAAASUdACAAAAABHRkEETUk/BKFq
        I1+2ch3QtHEejrJwH+SBXS4jjWIqN7JxHuixcB6CtnId4bl0HP+7dBz/uHMd/7t0HP+5dBz/uXQc/7t0
        G9u6dBzruXQc/7t0HP+4cx3/u3Qc/7l0HP+4cx3hq20gK45iKnKQYyktWE07BExIPwQAAAAAWE07CAAA
        AABPST4EaFM2BKNrI16GXyxWpGsjWZNlKI2nbCKdunQc47hzHfq7dBz/uXQc/7l0HP+7dBz/uHMd/7t0
        HP+5dBz/unQc67t0G+u5dBz/uXQc/7t0HP+4cx3/u3Qc/5xoJopmUjcEAAAAAEZGQQgAAAAAiGAsTbZy
        Hdu7dBz6rW8gtJVlJxZRSj0EUko9BAAAAABhUTgJtnIdt7ZyHbOTZCgxsnEeoqZsIqO7dBz/uXQc/7l0
        HP+7dBz/uHMd/7t0HP+7dBzrunQc27t0HP+5dBz/uXQc/7t0HP+4cx3/unQc8ZBjKoFZTjsHAAAAAG1W
        NCK6dBz2uXQc/7l0HP+7dBz/rW8gswAAAABDRUIEdFgyJrBwH7CxcB/BmGYmAophK1aKYSsgqm0gUrhz
        Hf+7dBz/uXQc/7l0HP+7dBz/uHMd/7t0G9q7dBy7uHMd/7t0HP+5dBz/uXQc/7t0HP+4cx3/u3Qc/3hZ
        MRlHR0EEnWglWLhzHf+7dBz/uXQc/7l0HP+7dBz3XE46CAAAAACgaiR1uXQc6qZsIiqFXy1Pu3Qc/6Zs
        I7x+XC8TtXIdlbhzHf+7dBz/uXQc/7l0HP+7dBz/uXQcu7p0HIu7dBz/uHMd/7t0HP+5dBz/uXQc/7t0
        HP+rbiDWflwvDENFQgR+XC89u3Qc/7hzHf+7dBz/uXQc/7ZyHdcAAAAARkZBCJZlJ025cxzxtHIds6Rr
        IhWmbCKun2kkWZhmJlO5cxzwu3Qc/7hzHf+7dBz/uXQc/7l0HP+6dByKt3IcSbl0HP+7dBz/uHMd/7t0
        HP+5dBz/sXAfnIlgKwNKR0AIAAAAAFZMPASVZSigu3Qc/7hzHf+7dBz0iWArSlJLPQQAAAAAUEo+CJVl
        JxifaSWZnmgkW55oJBWLYStatHEdVrl0HP+5dBz/u3Qc/7hzHf+7dBz/uXQc/6ltIUmycB4GuXMc7Ll0
        HP+7dBz/uHMd/7t0HP+kayPCb1Y0BIFdLhVXTTwPAAAAAFhNOwSAXS47omojVXBWMx8AAAAAUUo9BG5W
        NBuBXS4GeVoxKLt0HPy5dBz/tXIdorp0HOy4cx3/u3Qc/7l0HP+5dBz/u3Qc/7hzHf+7dBzspWsiB2dT
        NgKrbiGLuXQc/7l0HP+7dBz/uHMd/7t0HP6ubx/RuXQc/K1vILVYTTsPAAAAAENFQgRNST8EAAAAAENF
        QgiIYCwwt3Md67hzHPC5dBzcuHMd/7t0HP+5dBz/uXQc/7t0HP+4cx3/u3Qc/7l0HP+5dBz/u3Qc/5ln
        Jo4AAAAAAAAAAGJROCC5cxz0uXQc/7l0HP+7dBz/uHMd/7t0HP+5dBz/uXQc+4hgKxNGRkEIc1cyDnNY
        MhxXTTsIAAAAAI1iKnS7dBz/uXQc/7l0HP+7dBz/uHMd/7t0HP+5dBz/uXQc/7t0HP+4cx3/u3Qc/7l0
        HP+5cxzzkGMpGEdHQQMAAAAAAAAAAJJkKHy7dBz/uXQc/7l0HP+7dBz/uHMd/7t0HP+tbyDOcVczBH5c
        LwSsbyDZu3Qc/49jKoBfUDkEpWsiLrhzHf+7dBz/uXQc/7l0HP+7dBz/uHMd/7t0HP+5dBz/uXQc/7t0
        HP+4cx3/u3Qc/5lnJnpbTjoEAAAAAEBERAJFRkEEhF4tBLRxHcS7dBz/uXQc/7l0HP+7dBz/uHMd/7t0
        HP6kayPDr28foLt0HP+4cx3/unQc8JxoJYy3cx3ku3Qc/7hzHf+7dBz/uXQc/7l0HP+7dBz/uHMd/7t0
        HP+5dBz/uXQc/7t0HP+mbCLFflwvBEZGQQRAREQDAAAAAEBEQwRQSj4EmGYmGLZyHd+7dBz/uXQc/7l0
        HP+7dBz/uHMd/7t0HP+5dBz/uXQc/7t0HP+4cx3/u3Qc/7l0HP+5dBz/u3Qc/7hzHf+7dBz/uXQc/7l0
        HP+7dBz/uHMd/7t0HP+5dBz/tXId34xhKhhIR0EIAAAAAEBERAFAREQCAAAAAEBEQwRXTTsEmmclIrZy
        Hd+7dBz/uXQc/7l0HP+7dBz/uHMd/7t0HP+5dBz/uXQc/7t0HP+4cx3/u3Qc/7l0HP+5dBz/u3Qc/7hz
        Hf+7dBz/uXQc/7l0HP+7dBz/uHMd/7hzHN59Wy8mU0s9BAAAAABAREQIAAAAAAAAAABAREQHAAAAAEBE
        QwRXTTsEmGYmGLVyHcS7dBz/uXQc/7l0HP+7dBz/uHMd/7t0HP+5dBz/uXQc/7t0HP+4cx3/u3Qc/7l0
        HP+5dBz/u3Qc/7hzHf+7dBz/uXQc/7l0HP+2ch3Dc1cyHgAAAABAREMEQEREBAAAAABAREQDAAAAAAAA
        AABAREQIAAAAAEBEQwRSSj0Eh18sBJNkKHy5cxz0uXQc/7l0HP+7dBz/uHMd/7t0HP+5dBz/uXQc/7t0
        HP+4cx3/u3Qc/7l0HP+5dBz/u3Qc/7hzHf+7dBzzoGkkeW5WNAgAAAAAQERDCAAAAABAREQEQEREBAAA
        AABAREQCQEREBAAAAABAREQHAAAAAEBEQwRGRkEEAAAAAGRSOCCqbSGLuXMc7Ll0HP+7dBz/uHMd/7t0
        HP+5dBz/uXQc/7t0HP+4cx3/u3Qc/7l0HP+4cxzssnEei3RYMh8AAAAARUZBBEBEQwQAAAAAQEREBwAA
        AABAREQEQEREAwAAAABAREQCAAAAAAAAAABAREQCAAAAAEBERAIAAAAAAAAAAGlUNQKwbx4Gt3McSbp0
        HIu7dBy7unQc27t0G+u6dBzru3Qb27t0G7u5cxyLt3IcSI9jKQgAAAAAAAAAAEBEQwIAAAAAQEREAgAA
        AAAAAAAAQEREAgAAAABAREQBKUAClJQAAEpIAAAloAAAEtAAAAkgAAAEgAAAAkAAAAGAAAgAgAAAAQAA
        AAAAACEAAAAAAAABCAAAFAAAAAoAAACgIAAAQIAAAABAAAAAgAAAQEAAACEAAAASAAGAAQAAwAAAAQAA
        AACAAAACQAAABaAAABLQAAApKQAAlLWAA1o=
</value>
  </data>
</root>